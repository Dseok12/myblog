plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.devblog'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()  // Maven Central 저장소 추가
}

dependencies {
	// ✅ Spring Core
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// ✅ Database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ✅ 개발 편의
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// ✅ yml 설정 자동 완성용 (선택)
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// ✅ 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ✅ Hibernate Validator 의존성 추가 (Java Bean Validation을 위한 의존성)
	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}
